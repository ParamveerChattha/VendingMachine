{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Machine.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport { DisplayGrid } from \"./DisplayGrid\";\nimport styled from \"./products-on-display.modules.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Machine = () => {\n  _s();\n\n  const [balance, setBalance] = useState(0.0);\n  const [currenyType, setCurrencyType] = useState(\"Coin Type\");\n  const [currenyCount, setCurrencyCount] = useState(0);\n  const [currencyAddition, setCurrencyAddition] = useState(false);\n\n  function addCurrency() {\n    let amount = 0;\n    console.log(\"currenyType:\", currenyType, \" currencyCount: \", currenyCount);\n\n    switch (currenyType) {\n      case \"nickel\":\n        // 5 cents\n        amount = currenyCount * 5 / 100;\n        setBalance(balance + amount);\n        break;\n\n      case \"dime\":\n        //10 cents\n        amount = currenyCount * 10 / 100;\n        setBalance(balance + amount);\n        break;\n\n      case \"quarter\":\n        //25 cents\n        amount = currenyCount * 25 / 100;\n        setBalance(balance + amount);\n    }\n\n    setCurrencyType(\"Coin Type\");\n    setCurrencyCount(0);\n    console.group(\"balance at addCurrency\", balance);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: {\n      marginLeft: \"5%\",\n      textAlign: \"center\",\n      alignContent: \"center\",\n      justifyContent: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Total Balance: $\", Math.round((balance + Number.EPSILON) * 100) / 100]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        textAlign: \"left\"\n      },\n      children: !currencyAddition && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-success\",\n          onClick: e => {\n            e.preventDefault();\n            setCurrencyAddition(true);\n          },\n          children: \"ADD CURRENCY\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), currencyAddition && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-currency\",\n      style: {\n        display: \"flex\",\n        marginTop: \"15%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n        style: {\n          width: \"20%\",\n          marginRight: \"3%\",\n          marginLeft: \"10%\"\n        },\n        value: currenyCount,\n        type: \"number\",\n        onChange: e => {\n          if (e.target.value.match(\"^d+.d{0,0}$\")) {\n            setCurrencyCount(e.target.value);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n        onSelect: e => {\n          setCurrencyType(e.substring(2));\n        },\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n          variant: \"success\",\n          id: \"dropdown-basic\",\n          children: currenyType\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#/quarter\",\n            children: \"Quarter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#/dime\",\n            children: \"Dime\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            href: \"#/nickel\",\n            children: \"Nickel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        style: {\n          marginLeft: \"1%\"\n        },\n        type: \"submit\",\n        onClick: () => {\n          addCurrency();\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(DisplayGrid, {\n      balance: balance,\n      setBalance: setBalance\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Machine, \"CU4bGkwLpCoUAhc1dLH69MaL0Uw=\");\n\n_c = Machine;\n\nvar _c;\n\n$RefreshReg$(_c, \"Machine\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Machine.js"],"names":["useState","Dropdown","Button","Form","DisplayGrid","styled","Machine","balance","setBalance","currenyType","setCurrencyType","currenyCount","setCurrencyCount","currencyAddition","setCurrencyAddition","addCurrency","amount","console","log","group","marginLeft","textAlign","alignContent","justifyContent","Math","round","Number","EPSILON","e","preventDefault","display","marginTop","width","marginRight","target","value","match","substring"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport { DisplayGrid } from \"./DisplayGrid\";\nimport styled from \"./products-on-display.modules.scss\";\n\nexport const Machine = () => {\n  const [balance, setBalance] = useState(0.0);\n  const [currenyType, setCurrencyType] = useState(\"Coin Type\");\n  const [currenyCount, setCurrencyCount] = useState(0);\n  const [currencyAddition, setCurrencyAddition] = useState(false);\n\n  function addCurrency() {\n    let amount = 0;\n    console.log(\"currenyType:\", currenyType, \" currencyCount: \", currenyCount);\n    switch (currenyType) {\n      case \"nickel\": // 5 cents\n        amount = (currenyCount * 5) / 100;\n        setBalance(balance + amount);\n        break;\n      case \"dime\": //10 cents\n        amount = (currenyCount * 10) / 100;\n        setBalance(balance + amount);\n        break;\n      case \"quarter\": //25 cents\n        amount = (currenyCount * 25) / 100;\n        setBalance(balance + amount);\n    }\n    setCurrencyType(\"Coin Type\");\n    setCurrencyCount(0);\n    console.group(\"balance at addCurrency\", balance);\n  }\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        marginLeft: \"5%\",\n        textAlign: \"center\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <h2>\n        Total Balance: ${Math.round((balance + Number.EPSILON) * 100) / 100}\n      </h2>\n      <h3 style={{ textAlign: \"left\" }}>\n        {!currencyAddition && (\n          <>\n            <Button\n              variant=\"outline-success\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCurrencyAddition(true);\n              }}\n            >\n              ADD CURRENCY\n            </Button>\n          </>\n        )}\n      </h3>\n      {currencyAddition && (\n        <div\n          className=\"add-currency\"\n          style={{ display: \"flex\", marginTop: \"15%\" }}\n        >\n          <Form.Control\n            style={{ width: \"20%\", marginRight: \"3%\", marginLeft: \"10%\" }}\n            value={currenyCount}\n            type=\"number\"\n            onChange={(e) => {\n              if (e.target.value.match(\"^d+.d{0,0}$\")) {\n                setCurrencyCount(e.target.value);\n              }\n            }}\n          />\n          <Dropdown\n            onSelect={(e) => {\n              setCurrencyType(e.substring(2));\n            }}\n          >\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              {currenyType}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/quarter\">Quarter</Dropdown.Item>\n              <Dropdown.Item href=\"#/dime\">Dime</Dropdown.Item>\n              <Dropdown.Item href=\"#/nickel\">Nickel</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Button\n            style={{ marginLeft: \"1%\" }}\n            type=\"submit\"\n            onClick={() => {\n              addCurrency();\n            }}\n          >\n            Add\n          </Button>\n        </div>\n      )}\n      <DisplayGrid balance={balance} setBalance={setBalance} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}