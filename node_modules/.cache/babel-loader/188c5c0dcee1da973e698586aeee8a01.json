{"ast":null,"code":"var _jsxFileName = \"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/DisplayGrid.js\",\n    _s = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport styles from \"./products-on-display.modules.scss\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const DisplayGrid = () => {\n  _s();\n\n  const [itemLocation, setItemLocation] = useState(\"\");\n\n  function chooseColumn(e) {\n    setItemLocation(e.target.value);\n  }\n\n  function chooseRow(e) {\n    console.log();\n\n    if (_.isEmpty(itemLocation)) {\n      alert(\"Choose the column please!\");\n    } else {\n      console.log(e.target.value);\n      setItemLocation(_.toString(itemLocation).concat(e.target.value));\n    }\n\n    console.log(\"grid value:\", itemLocation);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choose-product\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Display Grid \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        value: \"A\",\n        onClick: e => {\n          chooseColumn(e);\n        },\n        children: \"A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        value: \"B\",\n        onClick: e => {\n          chooseColumn(e);\n        },\n        children: \"B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        value: \"C\",\n        onClick: e => {\n          chooseColumn(e);\n        },\n        children: \"C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          value: \"1\",\n          onClick: e => {\n            chooseRow(e);\n          },\n          children: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          variant: \"outline-primary\",\n          value: \"2\",\n          onClick: e => {\n            chooseRow(e);\n          },\n          children: \"2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          variant: \"outline-primary\",\n          value: \"3\",\n          onClick: e => {\n            chooseRow(e);\n          },\n          children: \"3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          variant: \"outline-primary\",\n          value: \"4\",\n          onClick: e => {\n            chooseRow(e);\n          },\n          children: \"4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-primary\",\n          variant: \"outline-primary\",\n          value: \"5\",\n          onClick: e => {\n            chooseRow(e);\n          },\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(DisplayGrid, \"fPMiEvgID/7qMU8CrRGx7+8OG2g=\");\n\n_c = DisplayGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"DisplayGrid\");","map":{"version":3,"sources":["/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/DisplayGrid.js"],"names":["useState","Dropdown","Button","Form","styles","_","DisplayGrid","itemLocation","setItemLocation","chooseColumn","e","target","value","chooseRow","console","log","isEmpty","alert","toString","concat"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport styles from \"./products-on-display.modules.scss\";\nimport _ from \"lodash\";\n\nexport const DisplayGrid = () => {\n  const [itemLocation, setItemLocation] = useState(\"\");\n\n  function chooseColumn(e) {\n    setItemLocation(e.target.value);\n  }\n\n  function chooseRow(e) {\n    console.log();\n    if (_.isEmpty(itemLocation)) {\n      alert(\"Choose the column please!\");\n    } else {\n      console.log(e.target.value);\n      setItemLocation(_.toString(itemLocation).concat(e.target.value));\n    }\n\n    console.log(\"grid value:\", itemLocation);\n  }\n\n  return (\n    <>\n      <div className={\"choose-product\"}>\n        <h2>Display Grid </h2>\n        <Button\n          variant=\"primary\"\n          value=\"A\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          A\n        </Button>\n        <Button\n          variant=\"primary\"\n          value=\"B\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          B\n        </Button>\n        <Button\n          variant=\"primary\"\n          value=\"C\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          C\n        </Button>\n        <br />\n        <br />\n        <div>\n          <Button\n            variant=\"outline-primary\"\n            value=\"1\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            1\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            variant=\"outline-primary\"\n            value=\"2\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            2\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            variant=\"outline-primary\"\n            value=\"3\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            3\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            variant=\"outline-primary\"\n            value=\"4\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            4\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            variant=\"outline-primary\"\n            value=\"5\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            5\n          </Button>\n        </div>\n      </div>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}