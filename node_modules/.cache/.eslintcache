[{"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/index.js":"1","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/App.js":"2","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/reportWebVitals.js":"3","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Title.js":"4","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Machine.js":"5","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/DisplayGrid.js":"6","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/utils/CalculatePrice.js":"7"},{"size":500,"mtime":1642438826498,"results":"8","hashOfConfig":"9"},{"size":344,"mtime":1642445036744,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1642438826498,"results":"11","hashOfConfig":"9"},{"size":98,"mtime":1642444652562,"results":"12","hashOfConfig":"9"},{"size":3090,"mtime":1642565652080,"results":"13","hashOfConfig":"9"},{"size":3669,"mtime":1642563023095,"results":"14","hashOfConfig":"9"},{"size":172,"mtime":1642560657540,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"sgz2t0",{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/index.js",[],["34","35"],"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/App.js",[],"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/reportWebVitals.js",[],"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Title.js",[],"/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/Machine.js",["36","37"],"import \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport { DisplayGrid } from \"./DisplayGrid\";\nimport styled from \"./products-on-display.modules.scss\";\n\nexport const Machine = () => {\n  const [balance, setBalance] = useState(0.0);\n  const [currenyType, setCurrencyType] = useState(\"Coin Type\");\n  const [currenyCount, setCurrencyCount] = useState(0);\n  const [currencyAddition, setCurrencyAddition] = useState(false);\n\n  function addCurrency() {\n    let amount = 0;\n    console.log(\"currenyType:\", currenyType, \" currencyCount: \", currenyCount);\n    switch (currenyType) {\n      case \"nickel\": // 5 cents\n        amount = (currenyCount * 5) / 100;\n        setBalance(balance + amount);\n        break;\n      case \"dime\": //10 cents\n        amount = (currenyCount * 10) / 100;\n        setBalance(balance + amount);\n        break;\n      case \"quarter\": //25 cents\n        amount = (currenyCount * 25) / 100;\n        setBalance(balance + amount);\n    }\n    setCurrencyType(\"Coin Type\");\n    setCurrencyCount(0);\n    console.group(\"balance at addCurrency\", balance);\n  }\n\n  return (\n    <div\n      className=\"container\"\n      style={{\n        marginLeft: \"5%\",\n        textAlign: \"center\",\n        alignContent: \"center\",\n        justifyContent: \"center\",\n      }}\n    >\n      <h2>\n        Total Balance: ${Math.round((balance + Number.EPSILON) * 100) / 100}\n      </h2>\n      <h3 style={{ textAlign: \"left\" }}>\n        {!currencyAddition && (\n          <>\n            <Button\n              variant=\"outline-success\"\n              onClick={(e) => {\n                e.preventDefault();\n                setCurrencyAddition(true);\n              }}\n            >\n              ADD CURRENCY\n            </Button>\n          </>\n        )}\n      </h3>\n      {currencyAddition && (\n        <div\n          className=\"add-currency\"\n          style={{ display: \"flex\", marginTop: \"15%\" }}\n        >\n          <Form.Control\n            style={{ width: \"20%\", marginRight: \"3%\", marginLeft: \"10%\" }}\n            value={currenyCount}\n            type=\"number\"\n            onChange={(e) => {\n              setCurrencyCount(parseInt(e.target.value));\n            }}\n          />\n          <Dropdown\n            onSelect={(e) => {\n              setCurrencyType(e.substring(2));\n            }}\n          >\n            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n              {currenyType}\n            </Dropdown.Toggle>\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#/quarter\">Quarter</Dropdown.Item>\n              <Dropdown.Item href=\"#/dime\">Dime</Dropdown.Item>\n              <Dropdown.Item href=\"#/nickel\">Nickel</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n\n          <Button\n            style={{ marginLeft: \"1%\" }}\n            type=\"submit\"\n            onClick={() => {\n              addCurrency();\n            }}\n          >\n            Add\n          </Button>\n        </div>\n      )}\n      <DisplayGrid balance={balance} setBalance={setBalance} />\n    </div>\n  );\n};\n","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/components/DisplayGrid.js",["38","39"],"import \"bootstrap/dist/css/bootstrap.css\";\nimport { useState } from \"react\";\nimport { Dropdown, Button, Form } from \"react-bootstrap\";\nimport _ from \"lodash\";\nimport { CalculatePrice } from \"../utils/CalculatePrice\";\n\nexport const DisplayGrid = (balance, setBalance) => {\n  const [itemLocation, setItemLocation] = useState(\"\");\n\n  let gridValue = \"\";\n\n  function chooseColumn(e) {\n    setItemLocation(\"\");\n    gridValue = e.target.value;\n  }\n\n  function chooseRow(e) {\n    if (_.isEmpty(gridValue)) {\n      alert(\"Choose the column please!\");\n    }\n    if (gridValue.length === 1) {\n      const item = gridValue.concat(e.target.value);\n      setItemLocation(item);\n    }\n  }\n\n  function dispenceItem() {\n    if (itemLocation.length === 2) {\n      const itemValType = itemLocation.slice(0, 1);\n      console.log(\"itemValType\", itemValType);\n      setItemLocation(\"\");\n      const cost = CalculatePrice(itemValType);\n      if (balance.balance >= cost) {\n        const newBalance = balance.balance - cost;\n        balance.setBalance(newBalance);\n        alert(`item dispensed. Balance: $${newBalance}`);\n      } else {\n        console.log(\"item cost: \", cost, \" and balance: \", balance.balance);\n        alert(\"Insufficient Balance\");\n      }\n    } else {\n      alert(\"choose correct item\");\n    }\n  }\n\n  return (\n    <>\n      <div className={\"choose-product\"}>\n        <h2>Choose the item code </h2>\n        <Button\n          variant=\"primary\"\n          value=\"A\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          A\n        </Button>\n        <Button\n          variant=\"primary\"\n          value=\"B\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          B\n        </Button>\n        <Button\n          variant=\"primary\"\n          value=\"C\"\n          onClick={(e) => {\n            chooseColumn(e);\n          }}\n        >\n          C\n        </Button>\n        <br />\n        <br />\n        <div>\n          <Button\n            variant=\"outline-primary\"\n            value=\"1\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            1\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            value=\"2\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            2\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            value=\"3\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            3\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            value=\"4\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            4\n          </Button>\n          <Button\n            variant=\"outline-primary\"\n            value=\"5\"\n            onClick={(e) => {\n              chooseRow(e);\n            }}\n          >\n            5\n          </Button>\n        </div>\n        <br />\n        {itemLocation.length === 2 && (\n          <h2> you have chosen: {itemLocation} </h2>\n        )}\n        <Button variant=\"danger\" onClick={() => setItemLocation(\"\")}>\n          Reset\n        </Button>\n        <Button variant=\"success\" onClick={() => dispenceItem()}>\n          Confirm\n        </Button>\n        <br />\n        <Button\n          variant=\"warning\"\n          onClick={() => {\n            alert(\n              `balance returned: ${\n                Math.round((balance.balance + Number.EPSILON) * 100) / 100\n              }`\n            );\n            balance.setBalance(0);\n          }}\n        >\n          withdraw balance\n        </Button>\n      </div>\n    </>\n  );\n};\n","/Volumes/diskA/workspace/codingTests/initLive/vending-machine/src/utils/CalculatePrice.js",["40"],"export const CalculatePrice = (ItemType) => {\n  switch (ItemType) {\n    case \"A\":\n      return 0.5;\n    case \"B\":\n      return 0.75;\n    case \"C\":\n      return 1.0;\n  }\n};\n",{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":5,"column":8,"nodeType":"47","messageId":"48","endLine":5,"endColumn":14},{"ruleId":"49","severity":1,"message":"50","line":16,"column":5,"nodeType":"51","messageId":"52","endLine":28,"endColumn":6},{"ruleId":"45","severity":1,"message":"53","line":3,"column":10,"nodeType":"47","messageId":"48","endLine":3,"endColumn":18},{"ruleId":"45","severity":1,"message":"54","line":3,"column":28,"nodeType":"47","messageId":"48","endLine":3,"endColumn":32},{"ruleId":"49","severity":1,"message":"50","line":2,"column":3,"nodeType":"51","messageId":"52","endLine":9,"endColumn":4},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"no-unused-vars","'styled' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'Dropdown' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation"]